class Solution:
    """
    @param root: The root of binary tree
    @return: An integer
    """
    def minDepth(self, root):
        # write your code here
        return self.helper(root)
        
    def helper(self, root):
        if not root: return 0
        if not root.left and not root.right: return 1
        left = self.helper(root.left)
        right = self.helper(root.right)
        if not root.left: 
            return right + 1
        if not root.right: 
            return left + 1
        return min(left, right) + 1
        
class Solution:
    """
    @param root: The root of binary tree
    @return: An integer
    """
    def minDepth(self, root):
        # write your code here
        return self.helper(root)
        
    def helper(self, root):
        if not root: 
            return 0
        if not root.left:
            return 1 + self.helper(root.right)
        elif not root.right:
            return 1 + self.helper(root.left)
        else:
            return 1 + min(self.helper(root.right), self.helper(root.left))
