# 解题思路：两个非负数字字符串的相乘。其实就是大数乘法。
# 算法的关键是要先将两个字符串翻转过来，然后按位进行相乘，
# 相乘后的数不要着急进位，而是存储在一个数组里面，
# 然后将数组中的数对10进行求余（%），就是这一位的数，
# 然后除以10，即/10，就是进位的数。
# 注意最后要将相乘后的字符串前面的0去掉。

class Solution:
    """
    @param num1: a non-negative integers
    @param num2: a non-negative integers
    @return: return product of num1 and num2
    """
    def multiply(self, num1, num2):
        # write your code here
        n1, n2 = num1[::-1], num2[::-1]
        arr = [0 for i in range(len(n1) + len(n2))]
        
        for i in range(len(n1)):
            for j in range(len(n2)):
                arr[i + j] += int(n1[i]) * int(n2[j])
        
        res = []
        for i in range(len(arr)):
            digit = arr[i] % 10
            carry = arr[i] // 10
            if i < len(arr) - 1:
                arr[i + 1] += carry 
            res.insert(0, str(digit))
        while res[0] == '0' and len(res) > 1:
            del res[0]
        
        return ''.join(res)
