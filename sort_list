"""
Definition of ListNode
class ListNode(object):
    def __init__(self, val, next=None):
        self.val = val
        self.next = next
"""

class Solution:
    """
    @param head: The head of linked list.
    @return: You should return the head of the sorted linked list, using constant space complexity.
    """
    def sortList(self, head):
        # write your code here
        if head is None or head.next is None:
            return head 
        
        fast, slow = head, head
        while fast.next is not None and fast.next.next is not None:
            fast = fast.next.next
            slow = slow.next
            
        mid = slow.next 
        slow.next = None 
        
        list1 = self.sortList(head)
        list2 = self.sortList(mid)
        
        result = self.mergeTwoLists(list1, list2)
        
        return result
        
    def mergeTwoLists(self, l1, l2):
        # write your code here
        dummy = ListNode(-sys.maxsize)
        temp = dummy
        
        while l1 is not None and l2 is not None:
            if l1.val < l2.val:
                temp.next = l1
                l1 = l1.next
            else:
                temp.next = l2
                l2 = l2.next
            temp = temp.next
        if l1 is not None:
            temp.next = l1
        else:
            temp.next = l2
        return dummy.next 
                
