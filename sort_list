"""
Definition of ListNode
class ListNode(object):
    def __init__(self, val, next=None):
        self.val = val
        self.next = next
"""

class Solution:
    """
    @param head: The head of linked list.
    @return: You should return the head of the sorted linked list, using constant space complexity.
    """
    def sortList(self, head):
        # write your code here
        if head is None or head.next is None:
            return head
        
        fast = head 
        slow = head 
        
        while fast.next is not None and fast.next.next is not None:
            fast = fast.next.next 
            slow = slow.next 
        
        mid = slow.next 
        slow.next = None 
        
        list1 = self.sortList(head)
        list2 = self.sortList(mid)
        
        result = self.merge(list1, list2)
        
        return result 
        
        
    def merge(self, list1, list2):
        if list1 is None:
            return list2 
        if list2 is  None:
            return list1
            
        head = None
        if list1.val < list2.val:
            head = list1
            list1 = list1.next 
        else:
            head = list2
            list2 = list2.next 
            
        temp = head 
        while list1 is not None and list2 is not None:
            if list1.val < list2.val:
                temp.next = list1
                temp = list1
                list1 = list1.next 
            else:
                temp.next = list2
                temp = list2
                list2 = list2.next
        if list1 is not None:
            temp.next = list1
        if list2 is not None:
            temp.next = list2
            
        return head 
        
