class Solution:
    """
    @param: head: The first node of linked list.
    @return: a tree node
    """
    def sortedListToBST(self, head):
        # write your code here
        array = []
        temp = head
        while temp:
            array.append(temp.val)  #should be temp.val not temp 
            temp = temp.next            
        return self.sortedarraytobst(array, 0, len(array) - 1)
        
    def helper(self, array, start, end):
        if start > end: 
            return None
        mid = (start + end) // 2
        root = TreeNode(array[mid])
        root.left = self.helper(array, start, mid - 1)
        root.right = self.helper(array, mid + 1, end)
        return root
        
   
