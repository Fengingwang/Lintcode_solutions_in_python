class Solution:
    """
    @param m: an integer
    @param n: an integer
    @return: the total number of unlock patterns of the Android lock screen
    """
    def numberOfPatterns(self, m, n):
        # Write your code here
        res = 0
        jumps = [[0 for _ in range(10)] for _ in range(10)]
        jumps[1][3] = jumps[3][1] = 2
        jumps[4][6] = jumps[6][4] = 5
        jumps[7][9] = jumps[9][7] = 8
        jumps[1][7] = jumps[7][1] = 4
        jumps[2][8] = jumps[8][2] = 5
        jumps[3][9] = jumps[9][3] = 6
        jumps[1][9] = jumps[9][1] = jumps[3][7] = jumps[7][3] = 5
        
        visited = [False] * 10
        for i in range(m, n + 1):
            res += self.dfs(1, i - 1, jumps, visited) * 4
            res += self.dfs(2, i - 1, jumps, visited) * 4
            res += self.dfs(5, i - 1, jumps, visited) 
            
        return res 
            
    def dfs(self, curt, remain, jumps, visited):
        if remain < 0: return 0
        if remain == 0: return 1
        visited[curt] = True 
        rst = 0
        for i in range(1, 10):
            if visited[i] == False and (jumps[curt][i] == 0 or visited[jumps[curt][i]] == True):
                rst += self.dfs(i, remain - 1, jumps, visited)
        visited[curt] = False 
        return rst
        
        
