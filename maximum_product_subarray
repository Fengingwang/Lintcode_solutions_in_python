class Solution:
    """
    @param nums: An array of integers
    @return: An integer
    """
    def maxProduct(self, nums):
        # write your code here
        if nums is None or len(nums) == 0:
            return 0
        
        n = len(nums)
        # imax/imin stores the max/min product of subarray that ends with the current number A[i]
        imax, imin, res = nums[0], nums[0], nums[0]
        
        # multiplied by a negative makes big number smaller, small number bigger, 
        # so we redefine the extremums by swapping them
        for i in range(1, n):
            if nums[i] < 0:  
                imax, imin = imin, imax
            
            # max/min product for the current number is 
            # either the current number itself or the max/min by the previous number times the current one
            imax = max(nums[i], nums[i] * imax)
            imin = min(nums[i], nums[i] * imin)
            res = max(res, imax)
        
        return res 
