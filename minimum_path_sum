# Creates a list containing 5 lists, each of 8 items, all set to 0
# w, h = 8, 5;
# Matrix = [[0 for x in range(w)] for y in range(h)] 


class Solution:
    """
    @param grid: a list of lists of integers
    @return: An integer, minimizes the sum of all numbers along its path
    """
    def minPathSum(self, grid):
        # write your code here
        M = len(grid)
        N = len(grid[0])
        
        # initial 
        dp = [[0 for x in range(N)] for y in range(M)] 
        dp[0][0] = grid[0][0]
        
        # status and transfer
        for i in range(1,M):
            dp[i][0] = dp[i - 1][0] + grid[i][0]
        for j in range(1,N):
            dp[0][j] = dp[0][j - 1] + grid[0][j]
        for i in range(1,M):
            for j in range(1,N):
                dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + grid[i][j]
        
        # return         
        return dp[-1][-1]
        # return dp[M - 1][N - 1]
            

