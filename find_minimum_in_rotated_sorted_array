class Solution:
    def findMin(self, nums):
        # write your code here
        if len(nums) == 0: return 
        
        target = nums[-1]
        start, end = 0, len(nums) - 2
        
        while start + 1 < end: 
            mid = (start + end) // 2
            if nums[mid] > target: 
                start = mid
            else: 
                end = mid 
        return min(target, nums[start], nums[end])
        
class Solution:
    # @param nums: a rotated sorted array
    # @return: the minimum number in the array
    def findMin(self, nums):
        if len(nums) == 0:
            return 0
            
        start, end = 0, len(nums) - 1
        target = nums[-1]
        while start + 1 < end:
            mid = int(start + (end - start) / 2)
            if nums[mid] < target:  # < or <= all ok here 
                end = mid
            else:
                start = mid
        return min(nums[start], nums[end])
