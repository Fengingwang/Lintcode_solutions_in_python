思路
如果长方形1在长方形2的左边或者右边，我们不需要考虑y坐标，直接返回false。
    ______        _________
   |      |      |         |
   |______|      |_________|
------------------------------------>

如果长方形1在长方形2的上面活着下面，我们也不需要考虑x坐标，直接返回false。
^
|    _____
|    |    |
|    |____|
|
|      _____
|      |    |
|      |____|
|

class Solution:
    """
    @param l1: top-left coordinate of first rectangle
    @param r1: bottom-right coordinate of first rectangle
    @param l2: top-left coordinate of second rectangle
    @param r2: bottom-right coordinate of second rectangle
    @return: true if they are overlap or false
    """
    def doOverlap(self, l1, r1, l2, r2):
        # write your code here
        if (l1.x > r2.x or l2.x > r1.x):
            return False 
        if (r1.y > l2.y or r2.y > l1.y):
            return False
        return True


class Solution:
    def doOverlap(self, l1, r1, l2, r2):
        # write your code here
        a = True if max(l1.x, l2.x) <= min(r1.x, r2.x) else False 
        b = True if min(l1.y, l2.y) >= max(r1.y, r2.y) else False 
        return a and b
