class Solution:
    def closestValue(self, root, target):
        # write your code here
        if not root: return 
        
        dif = abs(target - root.val)
        res = root.val
        q = []
        q.append(root)
        
        while q: 
            node = q.pop(0)
            if abs(node.val - target) < dif: 
                dif = abs(node.val - target)
                res = node.val 
            if node.left: q.append(node.left)
            if node.right: q.append(node.right)          
        return res
        
class Solution:
    def closestValue(self, root, target):
        if root == None: return None 
        
        dif = abs(root.val - target)
        res = root.val
        
        while root:
            if abs(root.val - target) < dif:
                dif = abs(root.val - target) 
                res = root.val
            
            if target < root.val and root.left:
                root = root.left
            elif target > root.val and root.right:
                root = root.right
            else:
                break 
            
        return res
