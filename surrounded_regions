# 高频题班的版本，使用 BFS 的方法
# 先把从边界开始的 O 都标记为 W，这样非 W 的地方就全都需要标记为 X
class Solution:
    """
    @param: board: board a 2D board containing 'X' and 'O'
    @return: nothing
    """
    def surroundedRegions(self, board):
        # write your code here
        if not any(board):
            return 
        n, m = len(board), len(board[0])
        q = [ij for k in range(max(n, m)) for ij in ((0, k), (n - 1, k), (k, 0), (k, m - 1))]
        while q:
            i, j = q.pop()
            if 0 <= i < n and 0 <= j < m and board[i][j] == 'O':
                board[i][j] = 'W'
                q += (i, j - 1), (i, j + 1), (i - 1, j), (i + 1, j)
            
        board[:] = [['XO'[c == 'W'] for c in row] for row in board]
