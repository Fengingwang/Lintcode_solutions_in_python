class Trie:
    
    def __init__(self):
        # do intialization if necessary
        self.root = {}

    """
    @param: word: a word
    @return: nothing
    """
    def insert(self, word):
        # write your code here
        curt =  self.root
        for c in word: 
            if c not in curt: 
                curt[c] = {}
            curt = curt[c]
        curt['#'] = True
    
    def find(self, target):
        curt = self.root
        for c in target:
            if c not in curt: 
                return None 
            curt = curt[c]
        return curt 

    """
    @param: word: A string
    @return: if the word is in the trie.
    """
    def search(self, word):
        # write your code here
        node = self.find(word)
        return node is not None and '#' in node

    """
    @param: prefix: A string
    @return: if there is any word in the trie that starts with the given prefix.
    """
    def startsWith(self, prefix):
        # write your code here
        return self.find(prefix) is not None
