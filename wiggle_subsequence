class Solution:
    def wiggleMaxLength(self, nums):
        # Write your code here
        if nums is None or len(nums) == 0: 
            return 0
        n = len(nums)
        p, q = [1] * n, [1] * n
        
        for i in range(1, n):
            for j in range(0, i):
                if nums[i] > nums[j]: 
                    p[i] = max(p[i], q[j] + 1)
                elif nums[i] < nums[j]:
                    q[i] = max(q[i], p[j] + 1)
                    
        return max(p[n - 1], q[n  - 1])
        
# 这道题给我了我们一个数组，让我们求最长摆动子序列，
# 看DP的做法，我们维护两个dp数组p和q，
# p[i]表示到i位置时首差值为正的摆动子序列的最大长度，
# q[i]表示到i位置时首差值为负的摆动子序列的最大长度。
# 我们从i=1开始遍历数组，然后对于每个遍历到的数字，
# 再从开头位置遍历到这个数字，然后比较nums[i]和nums[j]，
# 分别更新对应的位置
