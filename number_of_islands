class Solution:
    """
    @param grid: a boolean 2D matrix
    @return: an integer
    """
    def numIslands(self, grid):
        # write your code here
        if len(grid) == 0 or len(grid[0]) == 0: 
            return 0
        
        m, n = len(grid), len(grid[0])
        
        res = 0
        for x in range(m):
            for y in range(n):
                if grid[x][y] == 1:
                    res += 1
                    self.dfs(grid, x, y, m, n)
        return res 
        
        
    def dfs(self, grid, x, y, m, n):
        if x < 0 or y < 0 or x >= m or y >= n or grid[x][y] == 0:
            return 
        grid[x][y] = 0
        self.dfs(grid, x + 1, y, m, n)
        self.dfs(grid, x - 1, y, m, n)
        self.dfs(grid, x, y + 1, m, n)
        self.dfs(grid, x, y - 1, m, n)
 
