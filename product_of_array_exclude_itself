# 由于output[i] = (x0 * x1 * ... * xi-1) * (xi+1 * .... * xn-1)
# 因此执行两趟循环：
# 第一趟正向遍历数组，计算x0 ~ xi-1的乘积
# 第二趟反向遍历数组，计算xi+1 ~ xn-1的乘积

class Solution:
    """
    @param: nums: Given an integers array A
    @return: A long long array B and B[i]= A[0] * ... * A[i-1] * A[i+1] * ... * A[n-1]
    """
    def productExcludeItself(self, nums):
        # write your code here
        if len(nums) == 0:
            return []
        
        n = len(nums)
        
        left = [1 for i in range(n)]
        for i in range(1, n):
            left[i] = left[i - 1] * nums[i - 1]
        
        right = 1
        for i in range(n - 2, 0 - 1, -1):
            right *= nums[i + 1]
            left[i] = left[i] * right
        
        return left
