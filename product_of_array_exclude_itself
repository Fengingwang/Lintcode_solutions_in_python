# 由于output[i] = (x0 * x1 * ... * xi-1) * (xi+1 * .... * xn-1)
# 因此执行两趟循环：
# 第一趟正向遍历数组，计算x0 ~ xi-1的乘积
# 第二趟反向遍历数组，计算xi+1 ~ xn-1的乘积

class Solution:
    """
    @param A: Given an integers array A
    @return: An integer array B and B[i]= A[0] * ... * A[i-1] * A[i+1] * ... * A[n-1]
    """
    def productExcludeItself(self, A):
        length ,B  = len(A) ,[]
        f = [ 0 for i in range(length + 1)]
        f[ length ] = 1
        for i in range(length - 1 , 0 , -1):
            f[ i ] = f[ i + 1 ] * A[ i ]
        tmp = 1
        for i in range(length):
            B.append(tmp * f[ i + 1 ])
            tmp *= A[ i ]
        return B
