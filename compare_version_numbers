# 思路方法
# 这个问题虽然简单，但很容易考虑不周，主要是：
# 1，版本号可能有0或多个小数点；
# 2，两个版本号小数点个数可能不一样多；
# 3，不同位置0的含义要注意 。 

# 比如，我觉得下面几个例子要特别注意： 
# 1 等于 1.0 等于 1.0.000.00 
# 1 等于 01 等于 000001 
# 1.1 小于 1.10 小于 1.100000

# 思路一
# 版本号是分层的，所以可以将两个字符串按照“.”分割成子串数组，分层比较。
# 为了消除每层的前导0的影响可以将每层转换为整数进行比较；
# 当然还要考虑两个子串数组长度可能不同，可以对短的补0处理。

class Solution:
    """
    @param version1: the first given number
    @param version2: the second given number
    @return: the result of comparing
    """
    def compareVersion(self, version1, version2):
        # Write your code here
        v1_list = version1.split('.')
        v2_list = version2.split('.')
        
        for i in range(0, max(len(v1_list), len(v2_list))):
            v1 = int(v1_list[i]) if len(v1_list) > i else 0
            v2 = int(v2_list[i]) if len(v2_list) > i else 0
            if v1 > v2: return 1
            if v1 < v2: return -1
        return 0
        
