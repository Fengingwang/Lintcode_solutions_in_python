# 解题思路：
# 先将区间按照每个start的值来排序，
# 排好序以后判断一个区间的start值是否处在前一个区间中，
# 如果在前一个区间中，那么合并；
# 如果不在，就将新区间添加。

"""
Definition of Interval.
class Interval(object):
    def __init__(self, start, end):
        self.start = start
        self.end = end
"""

class Solution:
    """
    @param intervals: interval list.
    @return: A new interval list.
    """
    def merge(self, intervals):
        # write your code here
        
        intervals = sorted(intervals, key = lambda x: x.start)
        
        res = []
        for val in intervals:
            if len(res) == 0 or res[-1].end < val.start:
                res.append(val)
            else:
                res[-1].end = max(res[-1].end, val.end)
                
        return res
