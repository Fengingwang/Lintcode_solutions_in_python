"""
Definition of ListNode
class ListNode(object):
    def __init__(self, val, next=None):
        self.val = val
        self.next = next
"""

class Solution:
    # @param head, a ListNode
    # @return nothing
    
    def reorderList(self, head):
        if head is None or head.next is None or head.next.next is None:
            return head

        #find mid
        slow = head
        fast = head
        while fast.next is not None and fast.next.next is not None:
            slow = slow.next
            fast = fast.next.next
        mid = slow

        #cut in the middle
        left = head
        right_pre = mid.next
        if right_pre is None:
            return head
        mid.next = None
        
        right = self.reverse(right_pre)
        
        # merge left and right
        dummy = ListNode(-sys.maxsize)
        temp = dummy
        
        while left is not None or right is not None:
            if left is not None:
                temp.next = left
                left = left.next
                temp = temp.next
            if right is not None:
                temp.next = right
                right = right.next
                temp = temp.next
                
        return  dummy.next
        
    def reverse(self, curt):
        pren = None
        while curt is not None:
            temp = curt.next
            curt.next = pren
            pren = curt
            curt = temp
        return pren 
