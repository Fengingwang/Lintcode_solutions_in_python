# 题解
# Majority Number II 的升级版，有了前两道题的铺垫，此题的思路已十分明了，
# 对 K-1个数进行相互抵消，这里不太可能使用 key1, key2...等变量，用数组使用上不太方便，且增删效率不高，故使用哈希表较为合适，
# 当哈希表的键值数等于 K 时即进行清理，当然更准备地来讲应该是等于 K-1时清理。故此题的逻辑即为：
# 更新哈希表，若遇哈希表 size == K 时则执行删除操作，最后遍历哈希表取真实计数器值，返回最大的 key.

class Solution:
    """
    @param nums: A list of integers
    @param k: An integer
    @return: The majority number
    """
    def majorityNumber(self, nums, k):
        # write your code here
        counter = {}
        maxn = 0
        
        for num in nums:
            counter[num] = counter.get(num, 0) + 1
            if counter[num] > maxn:
                maxn = counter[num]
                majority = num 
        
        return majority 
