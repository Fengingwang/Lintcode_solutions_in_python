# 这道题给了我们两个单词，问我们最少需要多少步可以让两个单词相等，
# 每一步我们可以在任意一个单词中删掉一个字符。

class Solution:
    """
    @param word1: a string
    @param word2: a string
    @return: return a integer
    """
    def minDistance(self, word1, word2):
        # write your code here
        m, n = len(word1), len(word2)
        
        f = [[0 for _ in range(n + 1)] for _ in range(m + 1)]
        f[0][0] = 0
        
        for i in range(1, m + 1):
            f[i][0] = f[i - 1][0] + 1 #f[i][0] = i
        for j in range(1, n + 1):
            f[0][j] = f[0][j - 1]  + 1
            
        for i in range(1, m + 1):
            for j in range(1, n + 1):
                if word1[i - 1] == word2[j - 1]:
                    f[i][j] = f[i - 1][j - 1]
                else:
                    f[i][j] = min(f[i - 1][j], f[i][j - 1]) + 1
        
        return f[-1][-1]
