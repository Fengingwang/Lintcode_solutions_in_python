class Solution:
    """
    @param matrix: A list of lists of integers
    @param target: An integer you want to search in matrix
    @return: An integer indicate the total occurrence of target in the given matrix
    """
    def searchMatrix(self, matrix, target):
        if matrix == [] or matrix[0] == []:
            return 0
            
        m, n = len(matrix), len(matrix[0])
        cnt = 0
        
        i, j = m - 1, 0
        while i >= 0 and j < n:
            if matrix[i][j] == target:
                cnt += 1
                i -= 1
                j += 1
            elif matrix[i][j] < target: 
            # it must be elif if use if we will get in trouble
                j += 1
            elif matrix[i][j] > target:
                i -= 1
                
        return cnt
                
如果我们观察题目中给的那个例子，我们可以发现有两个位置的数字很有特点，左下角和右上角的数。
左下角的18，往上所有的数变小，往右所有数增加，
那么我们就可以和目标数相比较，如果目标数大，就往右搜，如果目标数小，就往上搜。
