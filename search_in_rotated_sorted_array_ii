class Solution:
    """
    @param A: an integer ratated sorted array and duplicates are allowed
    @param target: An integer
    @return: a boolean 
    """
    def search(self, A, target):
        # write your code here 
        # cornor case: 1 1 1 3 1 1 
        
        if len(A) == 0: return False 
        
        start, end  = 0, len(A) - 1
        while start + 1 < end: 
            mid = (start + end) // 2
            # cornor case 
            if A[start] == A[mid] and A[mid] == A[end]:
                start += 1
                end -= 1
            # it is a <= not <  
            if A[start] <= A[mid]:
                if A[start] <= target and target <= A[mid]:
                    end = mid 
                else: 
                    start = mid
            else: 
                if A[mid] <= target and target <= A[end]:
                    start = mid
                else: 
                    end = mid
        
        if A[start] == target: return True
        if A[end] == target: return True 
        
        return False 
        
class Solution:
    """
    @param A: an integer ratated sorted array and duplicates are allowed
    @param target: An integer
    @return: a boolean 
    """
    def search(self, A, target):
        # write your code here
        # 这个问题在面试中不会让实现完整程序
        # 只需要举出能够最坏情况的数据是 [1,1,1,1... 1] 里有一个0即可。
        # 在这种情况下是无法使用二分法的，复杂度是O(n)
        # 因此写个for循环最坏也是O(n)，那就写个for循环就好了
        # 反正面试考的不是你在这个题上会不会用二分法。是你想不想得到最坏情况。
        for num in A:
            if num == target:
                return True
        return False 
